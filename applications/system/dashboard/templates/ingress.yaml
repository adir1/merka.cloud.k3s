{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.dashboard.name }}
  namespace: {{ .Values.dashboard.namespace }}
  labels:
    {{- include "cluster-dashboard.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.ingress.annotations | nindent 4 }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    secretName: {{ .Values.ingress.tls.secretName }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      # Main dashboard
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.dashboard.name }}
            port:
              number: {{ .Values.dashboard.service.port }}
      
      # Service-specific paths
      {{- range $key, $service := .Values.services }}
      {{- if and $service.enabled (not $service.external) $service.target }}
      - path: {{ $service.path }}
        pathType: Prefix
        backend:
          service:
            name: {{ $service.target.service }}
            port:
              number: {{ $service.target.port }}
      {{- end }}
      {{- end }}

---
# Certificate for TLS
{{- if and .Values.ingress.tls.enabled .Values.ingress.tls.issuer }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Values.dashboard.name }}-tls
  namespace: {{ .Values.dashboard.namespace }}
  labels:
    {{- include "cluster-dashboard.labels" . | nindent 4 }}
spec:
  secretName: {{ .Values.ingress.tls.secretName }}
  issuerRef:
    name: {{ .Values.ingress.tls.issuer }}
    kind: ClusterIssuer
  dnsNames:
  - {{ .Values.ingress.host }}
{{- end }}

---
# Ingress for external redirects
{{- range $key, $service := .Values.services }}
{{- if and $service.enabled $service.external }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $.Values.dashboard.name }}-{{ $key }}-redirect
  namespace: {{ $.Values.dashboard.namespace }}
  labels:
    {{- include "cluster-dashboard.labels" $ | nindent 4 }}
  annotations:
    {{- if eq $.Values.ingress.className "traefik" }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ $.Values.dashboard.namespace }}-{{ $key }}-redirect@kubernetescrd
    {{- else if eq $.Values.ingress.className "nginx" }}
    nginx.ingress.kubernetes.io/permanent-redirect: {{ $service.externalUrl }}
    {{- end }}
spec:
  {{- if $.Values.ingress.className }}
  ingressClassName: {{ $.Values.ingress.className }}
  {{- end }}
  rules:
  - host: {{ $.Values.ingress.host }}
    http:
      paths:
      - path: {{ $service.path }}
        pathType: Prefix
        backend:
          service:
            name: {{ $.Values.dashboard.name }}
            port:
              number: {{ $.Values.dashboard.service.port }}

---
{{- if eq $.Values.ingress.className "traefik" }}
# Traefik middleware for external redirect
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ $key }}-redirect
  namespace: {{ $.Values.dashboard.namespace }}
spec:
  redirectRegex:
    regex: "^https?://[^/]+{{ $service.path }}(.*)"
    replacement: "{{ $service.externalUrl }}${1}"
    permanent: true
{{- end }}
{{- end }}
{{- end }}
{{- end }}