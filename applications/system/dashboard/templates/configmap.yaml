apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.dashboard.name }}-config
  namespace: {{ .Values.dashboard.namespace }}
  labels:
    {{- include "cluster-dashboard.labels" . | nindent 4 }}
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{{ .Values.customization.title }}</title>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
        <link href="/style.css" rel="stylesheet">
    </head>
    <body class="{{ .Values.customization.theme }}">
        <div class="container-fluid">
            <!-- Header -->
            <header class="row mb-4">
                <div class="col-12">
                    <div class="d-flex justify-content-between align-items-center py-3">
                        <div>
                            <h1 class="h3 mb-0">{{ .Values.customization.title }}</h1>
                            <small class="text-muted">{{ .Values.customization.subtitle }}</small>
                        </div>
                        {{- if .Values.customization.features.darkModeToggle }}
                        <button id="theme-toggle" class="btn btn-outline-secondary">
                            <i class="fas fa-moon"></i>
                        </button>
                        {{- end }}
                    </div>
                </div>
            </header>

            <!-- Cluster Information -->
            {{- if .Values.clusterInfo.enabled }}
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">
                                <i class="fas fa-server me-2"></i>
                                {{ .Values.clusterInfo.name }}
                            </h5>
                            <div class="row">
                                <div class="col-md-3">
                                    <strong>Environment:</strong> {{ .Values.clusterInfo.environment }}
                                </div>
                                <div class="col-md-3">
                                    <strong>Version:</strong> {{ .Values.clusterInfo.version }}
                                </div>
                                <div class="col-md-3">
                                    <strong>Nodes:</strong> {{ .Values.clusterInfo.nodes }}
                                </div>
                                <div class="col-md-3">
                                    <strong>Status:</strong> 
                                    <span class="badge bg-success">Healthy</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {{- end }}

            <!-- Quick Actions -->
            {{- if .Values.quickActions.enabled }}
            <div class="row mb-4">
                <div class="col-12">
                    <h4>Quick Actions</h4>
                    <div class="row">
                        {{- range .Values.quickActions.actions }}
                        <div class="col-md-3 mb-3">
                            <a href="{{ .url }}" class="card text-decoration-none quick-action-card" target="_blank">
                                <div class="card-body text-center">
                                    <i class="fas fa-{{ .icon }} fa-2x mb-2"></i>
                                    <h6 class="card-title">{{ .name }}</h6>
                                    <small class="text-muted">{{ .description }}</small>
                                </div>
                            </a>
                        </div>
                        {{- end }}
                    </div>
                </div>
            </div>
            {{- end }}

            <!-- Services by Category -->
            {{- if .Values.customization.features.serviceCategories }}
            {{- $categories := dict }}
            {{- range $key, $service := .Values.services }}
            {{- if $service.enabled }}
            {{- $category := $service.category }}
            {{- $services := index $categories $category | default list }}
            {{- $services = append $services $service }}
            {{- $categories = set $categories $category $services }}
            {{- end }}
            {{- end }}

            {{- range $category, $services := $categories }}
            <div class="row mb-4">
                <div class="col-12">
                    <h4>{{ $category }}</h4>
                    <div class="row">
                        {{- range $services }}
                        <div class="col-md-{{ div 12 $.Values.customization.layout.servicesPerRow }} mb-3">
                            <div class="card service-card h-100" data-service="{{ .name }}">
                                <div class="card-body">
                                    <div class="d-flex align-items-center mb-3">
                                        <div class="service-icon me-3" style="color: {{ .color }}">
                                            <i class="fas fa-{{ .icon }} fa-2x"></i>
                                        </div>
                                        <div>
                                            <h5 class="card-title mb-1">{{ .name }}</h5>
                                            <small class="text-muted">{{ .description }}</small>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        {{- if .external }}
                                        <a href="{{ .externalUrl }}" class="btn btn-primary btn-sm" target="_blank">
                                            <i class="fas fa-external-link-alt me-1"></i>
                                            Open
                                        </a>
                                        {{- else }}
                                        <a href="{{ .path }}" class="btn btn-primary btn-sm">
                                            <i class="fas fa-arrow-right me-1"></i>
                                            Access
                                        </a>
                                        {{- end }}
                                        {{- if and $.Values.healthChecks.enabled .healthCheck }}
                                        <span class="health-status" data-health-url="{{ .healthCheck }}">
                                            <i class="fas fa-circle text-secondary"></i>
                                        </span>
                                        {{- end }}
                                    </div>
                                </div>
                            </div>
                        </div>
                        {{- end }}
                    </div>
                </div>
            </div>
            {{- end }}
            {{- end }}
        </div>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
        <script src="/app.js"></script>
    </body>
    </html>

  style.css: |
    :root {
        --primary-color: {{ .Values.customization.colors.primary }};
        --secondary-color: {{ .Values.customization.colors.secondary }};
        --success-color: {{ .Values.customization.colors.success }};
        --warning-color: {{ .Values.customization.colors.warning }};
        --danger-color: {{ .Values.customization.colors.danger }};
    }

    body.dark {
        background-color: #1a1a1a;
        color: #ffffff;
    }

    body.dark .card {
        background-color: #2d2d2d;
        border-color: #404040;
        color: #ffffff;
    }

    body.dark .text-muted {
        color: #adb5bd !important;
    }

    .service-card {
        transition: transform 0.2s, box-shadow 0.2s;
        cursor: pointer;
    }

    .service-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .quick-action-card {
        transition: transform 0.2s;
        color: inherit;
    }

    .quick-action-card:hover {
        transform: translateY(-2px);
        color: inherit;
    }

    .health-status .fa-circle.text-success {
        color: var(--success-color) !important;
    }

    .health-status .fa-circle.text-danger {
        color: var(--danger-color) !important;
    }

    .health-status .fa-circle.text-warning {
        color: var(--warning-color) !important;
    }

    .service-icon {
        min-width: 60px;
    }

  app.js: |
    // Health check functionality
    {{- if .Values.healthChecks.enabled }}
    async function checkHealth(url) {
        try {
            const response = await fetch(url, { 
                method: 'GET',
                mode: 'no-cors',
                timeout: {{ .Values.healthChecks.timeout }}000 
            });
            return response.ok;
        } catch (error) {
            return false;
        }
    }

    function updateHealthStatus() {
        document.querySelectorAll('[data-health-url]').forEach(async (element) => {
            const healthUrl = element.getAttribute('data-health-url');
            const icon = element.querySelector('i');
            
            try {
                const isHealthy = await checkHealth(healthUrl);
                icon.className = isHealthy ? 
                    'fas fa-circle text-success' : 
                    'fas fa-circle text-danger';
            } catch (error) {
                icon.className = 'fas fa-circle text-warning';
            }
        });
    }

    // Update health status every {{ .Values.healthChecks.interval }} seconds
    setInterval(updateHealthStatus, {{ .Values.healthChecks.interval }}000);
    updateHealthStatus(); // Initial check
    {{- end }}

    // Theme toggle functionality
    {{- if .Values.customization.features.darkModeToggle }}
    document.getElementById('theme-toggle')?.addEventListener('click', function() {
        document.body.classList.toggle('dark');
        const icon = this.querySelector('i');
        icon.className = document.body.classList.contains('dark') ? 
            'fas fa-sun' : 'fas fa-moon';
        
        // Save preference
        localStorage.setItem('theme', document.body.classList.contains('dark') ? 'dark' : 'light');
    });

    // Load saved theme
    if (localStorage.getItem('theme') === 'dark') {
        document.body.classList.add('dark');
        document.getElementById('theme-toggle')?.querySelector('i').className = 'fas fa-sun';
    }
    {{- end }}

    // Search functionality
    {{- if .Values.customization.features.searchFilter }}
    function filterServices(searchTerm) {
        document.querySelectorAll('.service-card').forEach(card => {
            const serviceName = card.getAttribute('data-service').toLowerCase();
            const isVisible = serviceName.includes(searchTerm.toLowerCase());
            card.closest('.col-md-4, .col-md-3, .col-md-6').style.display = 
                isVisible ? 'block' : 'none';
        });
    }
    {{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.dashboard.name }}-nginx
  namespace: {{ .Values.dashboard.namespace }}
  labels:
    {{- include "cluster-dashboard.labels" . | nindent 4 }}
data:
  default.conf: |
    server {
        listen {{ .Values.dashboard.service.targetPort }};
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Main dashboard
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }